# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Blog {
  """id of the session"""
  _id: String

  """bannerImage of the blog"""
  bannerImage: String

  """category of the blog"""
  category: String

  """date on which blog is updated"""
  createdAt: DateTime

  """description of the blog"""
  description: String

  """Owner details of blog """
  owner: Owner

  """title of the blog"""
  title: String
}

type BlogByIdDef {
  """id of the session"""
  _id: String

  """bannerImage of the blog"""
  bannerImage: String

  """category of the blog"""
  category: String

  """subContent of the blog"""
  comments: [CommentData!]

  """date on which blog is updated"""
  createdAt: DateTime

  """description of the blog"""
  description: String

  """owner of the blog"""
  owner: Owner

  """subContent of the blog"""
  subContent: [SubContentData!]

  """title of the blog"""
  title: String
}

input CheckDto {
  name: String
}

type CommentData {
  """id of the session"""
  date: DateTime

  """id of the session"""
  email: String

  """id of the session"""
  message: String

  """id of the session"""
  name: String
}

input CommentsDto {
  """id of Blog """
  id: String!

  """added message of Blog user"""
  message: String!
}

type ContentDef {
  """_id Of the content """
  _id: String!

  """title Of the content """
  title: String!
}

input Courses {
  """name of the course"""
  name: String
}

input CreateBlogDto {
  """bannerImage of the blog"""
  bannerImage: String!

  """category of the blog"""
  category: String

  """description of the blog"""
  description: String

  """subContent of the blog"""
  subContent: [SubContent!]!

  """title of the blog"""
  title: String!
}

input CreateContentDto {
  """title Of the content """
  title: String!
}

input CreatePortfolioDto {
  """banner of the user"""
  banner: String

  """Blogs of the owner"""
  blogs: [String!]

  """company of the user"""
  company: String

  """all courses of the author"""
  courses: [Courses!]

  """description of the User"""
  description: String

  """expertise of the user"""
  expert: Boolean

  """name of the expertise"""
  expertise: String

  """banner of the user"""
  image: String

  """location of the user"""
  location: String

  """website of the user"""
  website: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetAllSessionDto {
  """Input sort order"""
  sort: Float = 1
}

input GetBlogByIdDto {
  """id of the blog"""
  id: String!
}

type GetSessionByIdDef {
  """description of the session"""
  description: String

  """image of the session"""
  headerImage: String

  """owner of the session"""
  owner: Owner

  """title of the session"""
  title: String

  """video of the session"""
  video: String
}

input GetSessionByIdDto {
  """Input sort order"""
  id: String
}

type MessageDef {
  """title of the session"""
  message: String

  """success true/false"""
  success: Boolean
}

type Mutation {
  addComment(input: CommentsDto!): MessageDef!
  check(input: CheckDto!): String!
  createBlog(input: CreateBlogDto!): MessageDef!
  createContent(input: CreateContentDto!): MessageDef!
  createPortfolio(input: CreatePortfolioDto!): MessageDef!
  createSession(input: SessionDto!): MessageDef!
  getSessionById(input: GetSessionByIdDto!): GetSessionByIdDef!
  signIn(input: SignInDto!): UserTokenData!
  signUpUser(input: SignupDto!): UserTokenData!
}

type Owner {
  """email of the owner"""
  email: String!

  """phone of the owner"""
  phone: String

  """name of the owner"""
  username: String!
}

type Query {
  getAllBlogs: [Blog!]!
  getAllSessions(input: GetAllSessionDto!): SessionDataDef!
  getBlogById(input: GetBlogByIdDto!): BlogByIdDef!
  listAllContent: [ContentDef!]!
}

type SessionDataDef {
  """Array of data of session of users"""
  allSessions: [SessionDef!]!
}

type SessionDef {
  """_id of the session"""
  _id: String

  """image of the session"""
  headerImage: String

  """owner of the session"""
  owner: Owner

  """title of the session"""
  title: String
}

input SessionDto {
  """description of the session"""
  description: String

  """header image of the session"""
  headerImage: String!

  """title of the session"""
  title: String!

  """Video  of the session"""
  video: String
}

input SignInDto {
  """email of the user"""
  email: String!

  """password of the user"""
  password: String!
}

input SignupDto {
  """email of the user"""
  email: String!

  """password of the user"""
  password: String!

  """phone of the user"""
  phone: String

  """id of the portfolio """
  portfolio: String

  """name of the user"""
  username: String!
}

input SubContent {
  """Content of the blog"""
  content: String!

  """images array"""
  images: [String!]

  """title of blog"""
  title: String!
}

type SubContentData {
  """id of the session"""
  content: String

  """subContent of the blog"""
  images: [String!]

  """id of the session"""
  title: String
}

type User {
  """email of the user"""
  email: String!

  """password of the user"""
  password: String

  """phone of the user"""
  phone: Float

  """username of the user"""
  username: String
}

type UserTokenData {
  """token of the user"""
  token: String

  """token of the user"""
  user: User
}